@model IEnumerable<RIS.Models.User>
@using GridMvc.Html
@using RIS.Resources;
@{
    //ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
    let activeLink1 = document.querySelector(".navbar ul.navbar-nav li.nav-item button.nav-link#manageLink");
    let activeLink2 = document.querySelector(".navbar ul.navbar-nav li.nav-item .dropdown-menu li a.dropdown-item#usersLink");
    activeLink1.classList.add("active");
    activeLink2.classList.add("active");
</script>

<title>@ViewData["Title"].ToString()</title>
<div style="margin-top: 130px">
    <h2 class="main-title">@ViewData["Title"].ToString()</h2>
    @*<table align="center" style="margin-top:3px;">
        <tr>
            <td class="btn btn-primary btn-xs c">
                @Html.ActionLink(RIS.Resources.Res.AddUser.ToString(), "Create")
            </td>
        </tr>
    </table>*@
    <div class="btn create-btn">@Html.ActionLink(RIS.Resources.Res.AddUser.ToString(), "Create") <i class="fa fa-plus"></i></div>
    <hr />
    <div style="padding-left: 5%;padding-right: 5%;">
        @Html.Grid(Model).Columns(columns =>
        {
            //columns.Add(c => c.num).Sortable(true).SortInitialDirection(GridMvc.Sorting.GridSortDirection.Descending);
            columns.Add(c => c.username).Titled(Res.UserName).Filterable(true);
            columns.Add(c => c.pass).Titled(Res.Password);
            columns.Add(c => c.language).Titled(Res.Language);
            columns.Add(c => c.firstName).Titled(Res.userFn);
            columns.Add(c => c.lastName).Titled(Res.userLn);
            columns.Add(c => c.userDepartement.name).Titled(Res.Departement);

            columns.Add().Encoded(false).Sanitized(false).SetWidth(50)
            //.RenderValueAs(c => Html.ActionLink(" ", "Edit", new { i = c.num }, new { @title = RIS.Resources.Res.edit, @class = "btn btn-default fa fa-pencil" }) + "&nbsp;&nbsp;" +
            //   Html.ActionLink(" ", "Details", new { i = c.num }, new { @title = RIS.Resources.Res.userDetails, @class = "btn btn-info fa fa-info" }) + "&nbsp;&nbsp;" +
            //   Html.ActionLink(" ", "Delete", new { i = c.num }, new { @title = RIS.Resources.Res.Delete, @class = "btn btn-danger fa fa-trash" })).Encoded(false).Css("flexy").Titled(Res.controlKey);

            .RenderValueAs(c => "<div class='table-buttons'><a href='" + @Url.Action("Edit", "User", new { i = c.num }) + "' class='btn icon-btn edit-o-btn' title='" + RIS.Resources.Res.edit + "'><i class='fa fa-pencil'></i></a>" +
                "<a href='" + @Url.Action("Details", "User", new { i = c.num }) + "' class='btn icon-btn details-o-btn' title='" + RIS.Resources.Res.details + "'><i class='fa fa-info'></i></a>" +
                "<a href='" + @Url.Action("Delete", "User", new { i = c.num }) + "' class='btn icon-btn delete-o-btn' title='" + RIS.Resources.Res.Delete + "'><i class='fa fa-trash'></i></a></div>").Css("position-relative overflow-hidden").Encoded(false).Titled(Res.controlKey);
        }).WithPaging(5).Sortable()
    </div>
</div>
<hr />
