@model RIS.Models.Radiology

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<title>@RIS.Resources.Res.CreateRad.ToString()</title>
<div style="margin-top:1%">

<h2>@RIS.Resources.Res.CreateRad.ToString()</h2>
   
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <center>
        <div style="margin-top:3px;background-color:white;width:700px; border-radius:4px;">
            @Html.HiddenFor(model => model.ID)
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.PatientID)
            <table style="width:90%;">
                <tr>
                    <td><strong> @RIS.Resources.Res.patientLable</strong></td>
                    <td colspan="1"> @ViewData["_Patient"]</td>
                </tr>
                @if (ViewData["_notes"] != null)
                {
                    <tr style="background-color:red">
                        <td><strong> @RIS.Resources.Res.PatientNotes</strong></td>
                        <td colspan="1">@ViewData["_notes"]</td>
                    </tr>
                }

                <tr>
                    <td>@Html.LabelFor(model => model.DepartementName, htmlAttributes: new { })</td>
                    <td class="requiredTd">
                        @Html.DropDownList("DepartementName", null, new { @style = "width:100%",
                       @Required = "Required",
                       oninvalid = "this.setCustomValidity('" + RIS.Resources.Res.alertRequired + "')",
                       oninput = "setCustomValidity('')"
                   })
                 
                    <span style="padding-top: 3%;color:red">&nbsp;*</span>

                </td>
            </tr>

                <tr>
                    <td>@Html.LabelFor(model => model.ModalityID, htmlAttributes: new {})</td>
                    <td class="requiredTd">
                        @Html.DropDownList("ModalityID", null, new { @style = "width:100%",
                       @Required = "Required",
                       oninvalid = "this.setCustomValidity('" + RIS.Resources.Res.alertRequired + "')",
                       oninput = "setCustomValidity('')"
                   })
                        <span style="padding-top: 3%;color:red">&nbsp;*</span>
                            @Html.ValidationMessageFor(model => model.ModalityID, "", new { @class = "text-danger" })
</td>
                </tr>

                <tr >
                    <td>@Html.LabelFor(model => model.ProcedureID, htmlAttributes: new { })</td>
                    <td class="requiredTd">
                    @Html.DropDownList("ProcedureID",null, new { @style = "width:100%",
                   @Required = "Required",
                   oninvalid = "this.setCustomValidity('" + RIS.Resources.Res.alertRequired + "')",
                   oninput = "setCustomValidity('')"
               })
                        <span style="padding-top: 3%;color:red">&nbsp;*</span>
                    
                    </td>
                </tr>

                <tr>
                    <td>@Html.LabelFor(model => model.DocumnetId, htmlAttributes: new { })</td>
                    <td class="requiredTd">

@if ((Boolean)ViewData["rvlDoc"])
{
                        @Html.EditorFor(model => model.DocumnetId, new { htmlAttributes = new { @class = "form-control",
                       @Required = "Required",
                       oninvalid = "this.setCustomValidity('" + RIS.Resources.Res.alertRequired + "')",
                       oninput = "setCustomValidity('')"
                   } })
    <span style="padding-top: 3%;color:red">&nbsp;*</span>
}
else
{
    @Html.EditorFor(model => model.DocumnetId, new { htmlAttributes = new { @class = "form-control" } })

}
                        @Html.ValidationMessageFor(model => model.DocumnetId, "", new { @class = "text-danger" })
                    </td>
                </tr>
               
                <tr>
                    <td>@Html.LabelFor(model => model.Doctor, htmlAttributes: new { })</td>
                    <td class="requiredTd">
                        @if ((Boolean)ViewData["rvlDoct"])
                        {
                        @Html.EditorFor(model => model.Doctor, new { htmlAttributes = new { @class = "form-control",
                       @Required = "Required",
                       oninvalid = "this.setCustomValidity('" + RIS.Resources.Res.alertRequired + "')",
                       oninput = "setCustomValidity('')"
                   } }) 
                            <span style="padding-top: 3%;color:red">&nbsp;*</span>
    }
    else
    {
    @Html.EditorFor(model => model.Doctor, new { htmlAttributes = new { @class = "form-control" } })

    }
    @Html.ValidationMessageFor(model => model.Doctor, "", new { @class = "text-danger" })
</td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(model => model.Type, htmlAttributes: new { })</td>
                    <td class="requiredTd">
                        @Html.DropDownList("Type", null, new { @style = "width:100%" })
                        <span style="padding-top: 3%;color:red">&nbsp;*</span>

                        
                    </td>
                </tr>

            </table>


        </div>
    </center>
        

  
    <table align="center">
        <tr>
            <td><input type="submit" value=@RIS.Resources.Res.add.ToString() class="btn btn-default" /></td>
            <td>@Html.ActionLink(RIS.Resources.Res.regPage.ToString(), "Index","Patient")</td>
        </tr>
    </table>
    <br /><br />
}

</div>



<script>
    $("#DepartementName").change(function () {
        var selectedText = $(this).find("option:selected").text();
        var selectedValue = $(this).val();
      //  alert("Selected Text: " + selectedText + " Value: " + selectedValue);
        $.ajax({

            type: 'POST',

            url: '/Radiology/getDeptModalities',

            data: '{ "dept" : "' + selectedValue + '" }',

            contentType: 'application/json; charset=utf-8',

            dataType: 'json',


            success: function (data) {
                var ddlMod = document.getElementById("ModalityID");
                ddlMod.innerHTML = "";
               
                for (var i = 0; i < data.length; i++) {
                    var option = document.createElement("OPTION");

                    //Set Customer Name in Text part.
                    option.innerHTML = data[i].name;

                    //Set CustomerId in Value part.
                    option.value = data[i].num;

                    //Add the Option element to DropDownList.
                    ddlMod.options.add(option);
                }

            },
            error: function () {

            }

        });
    });
</script>

<script type="text/javascript">

    $(document).ready(function () {
        $("#Doctor").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Doctor/DocAutoComplete",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.name, value: item.name};
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    })
</script>